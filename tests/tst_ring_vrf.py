from dot_ring.curve.specs.bandersnatch import BandersnatchPoint
import time
from dot_ring.vrf.ring.ring_vrf import  RingVrf as RVRF
# from dot_ring.types.base import ByteArray32

start=time.time()
#1 To verify a signature
Ring_Proof="98bc465cdf55ee0799bc25a80724d02bb2471cd7d065d9bd53a3a7e3416051f6e3686f7c6464c364b9f2b0f15750426a9107bd20fe94a01157764aab5f300d7e2fcba2178cb80851890a656d89550d0bebf60cca8c23575011d2f37cdc06dcdd93818c0c1c3bff5a793d026c604294d0bbd940ec5f1c652bb37dc47564d71dd1aa05aba41d1f0cb7f4442a88d9b533ba8e4788f711abdf7275be66d45d222dde988dedd0cb5b0d36b21ee64e5ef94e26017b674e387baf0f2d8bd04ac6faab057510b4797248e0cb57e03db0199cd77373ee56adb7555928c391de794a07a613f7daac3fc77ff7e7574eaeb0e1a09743c4dae2b420ba59cf40eb0445e41ffb2449021976970c858153505b20ac237bfca469d8b998fc928e9db39a94e2df1740ae0bad6f5d8656806ba24a2f9b89f7a4a9caef4e3ff01fec5982af873143346362a0eb9bb2f6375496ff9388639c7ffeb0bcee33769616e4878fc2315a3ac3518a9da3c4f072e0a0b583436a58524f036c3a1eeca023598682f1132485d3a57088b63acd86c6c72288568db71ff15b7677bfe7218acdebb144a2bf261eb4f65980f830e77f37c4f8d11eac9321f302a089698f3c0079c41979d278e8432405fc14d80aad028f79b0c4c626e4d4ac4e643692a9adfdc9ba2685a6c47eef0af5c8f5d776083895e3e01f1f944cd7547542b7e64b870b1423857f6362533f7cd2a01d231ffed60fe26169c28b28ace1a307fdc8d4b29f0b44659402d3d455d719d896f83b7ee927f0652ca883e4cfa85a2f4f7bc60dda1b068092923076893db5bd477fa2d26173314d7512760521d6ec9f"
Message_as_point=(48207201317759373959761172024208908678115004853439356209021473599724068241881, 30813062879524476915590188441071338179409105759933940416075874978342105719099)
message_bs=BandersnatchPoint(Message_as_point[0], Message_as_point[1]).point_to_string() #byte string
ring_root = "afd34e92148ec643fbb578f0e14a1ca9369d3e96b821fcc811c745c320fe2264172545ca9b6b1d8a196734bc864e171484f45ba5b95d9be39f03214b59520af3137ea80e302730a5df8e4155003414f6dcf0523d15c6ef5089806e1e8e5782be92e630ae2b14e758ab0960e372172203f4c9a41777dadd529971d7ab9d23ab29fe0e9c85ec450505dde7f5ac038274cf"

is_valid= RVRF.verify_signature(message_bs,bytes.fromhex(ring_root), bytes.fromhex(Ring_Proof))
print("is Ring Proof valid:", is_valid)


#2 To generate Ring root
# B_keys=[0x5e465beb01dbafe160ce8216047f2155dd0569f058afd52dcea601025a8d161d,
# 0x3d5e5a51aab2b048f8686ecd79712a80e3265a114cc73f14bdb2a59233fb66d0,
# 0xaa2b95f7572875b0d0f186552ae745ba8222fc0b5bd456554bfe51c68938f8bc,
# 0x7f6190116d118d643a98878e294ccf62b509e214299931aad8ff9764181a4e33,
# 0x48e5fcdce10e0b64ec4eebd0d9211c7bac2f27ce54bca6f7776ff6fee86ab3e3,
# 0xf16e5352840afb47e206b5c89f560f2611835855cf2e6ebad1acc9520a72591d]
# B_keys=[ByteArray32(i) for i in B_keys]


B_keys=["5e465beb01dbafe160ce8216047f2155dd0569f058afd52dcea601025a8d161d",
"3d5e5a51aab2b048f8686ecd79712a80e3265a114cc73f14bdb2a59233fb66d0",
"aa2b95f7572875b0d0f186552ae745ba8222fc0b5bd456554bfe51c68938f8bc",
"7f6190116d118d643a98878e294ccf62b509e214299931aad8ff9764181a4e33",
"48e5fcdce10e0b64ec4eebd0d9211c7bac2f27ce54bca6f7776ff6fee86ab3e3",
"f16e5352840afb47e206b5c89f560f2611835855cf2e6ebad1acc9520a72591d"]

B_keys=[bytes.fromhex(i) for i in B_keys]

ring_root= RVRF.construct_ring_root(B_keys)
print("Ring_Root:", ring_root.hex())



#3 Construct RingVRF_proof (pedersen+ring_proof)

B_keys=[0x5e465beb01dbafe160ce8216047f2155dd0569f058afd52dcea601025a8d161d,
0x3d5e5a51aab2b048f8686ecd79712a80e3265a114cc73f14bdb2a59233fb66d0,
0xaa2b95f7572875b0d0f186552ae745ba8222fc0b5bd456554bfe51c68938f8bc,
0x3d6406500d4009fdf2604546093665911e753f2213570a29521fd88bc30ede18,
0x7f6190116d118d643a98878e294ccf62b509e214299931aad8ff9764181a4e33,
0x48e5fcdce10e0b64ec4eebd0d9211c7bac2f27ce54bca6f7776ff6fee86ab3e3,
0xf16e5352840afb47e206b5c89f560f2611835855cf2e6ebad1acc9520a72591d]
blinding="01371ac62e04d1faaadbebaa686aaf122143e2cda23aacbaa4796d206779a501"
s_k="3d6406500d4009fdf2604546093665911e753f2213570a29521fd88bc30ede18"
alpha=b""
ad=b""
# B_keys=[ByteArray32(i) for i in B_keys]
# ring_vrf_proof= RVRF.ring_vrf_proof(alpha, ad, bytes.fromhex(blinding),bytes.fromhex(s_k), B_keys)
# print("Ring_VRF_Proof:", ring_vrf_proof)


# #4 Proof to hash
# RingVRF_PROOF="e7aa5154103450f0a0525a36a441f827296ee489ef30ed8787cff8df1bef223f3b21abd58807bb6d93797001adaacd7113ec320dcf32d1226494e18a57931fc48123054bfdb6918e0aa25c3337e6509eea262282fd26853bf7cd6db234583f5eac57ce6a53a887fc59b6aa73d8ff0e718b49bd9407a627ae0e9b9e7c5d0d175b0d379b65fb1e6b2adcbf80618c08e31fd526f06c2defa159158f5de146104c0fe2ca83136143e0cac3f7ee863edd3879ed753b995b1ff8d58305d3b1f323630b98bc465cdf55ee0799bc25a80724d02bb2471cd7d065d9bd53a3a7e3416051f6e3686f7c6464c364b9f2b0f15750426a9107bd20fe94a01157764aab5f300d7e2fcba2178cb80851890a656d89550d0bebf60cca8c23575011d2f37cdc06dcdd93818c0c1c3bff5a793d026c604294d0bbd940ec5f1c652bb37dc47564d71dd1aa05aba41d1f0cb7f4442a88d9b533ba8e4788f711abdf7275be66d45d222dde988dedd0cb5b0d36b21ee64e5ef94e26017b674e387baf0f2d8bd04ac6faab057510b4797248e0cb57e03db0199cd77373ee56adb7555928c391de794a07a613f7daac3fc77ff7e7574eaeb0e1a09743c4dae2b420ba59cf40eb0445e41ffb2449021976970c858153505b20ac237bfca469d8b998fc928e9db39a94e2df1740ae0bad6f5d8656806ba24a2f9b89f7a4a9caef4e3ff01fec5982af873143346362a0eb9bb2f6375496ff9388639c7ffeb0bcee33769616e4878fc2315a3ac3518a9da3c4f072e0a0b583436a58524f036c3a1eeca023598682f1132485d3a57088b63acd86c6c72288568db71ff15b7677bfe7218acdebb144a2bf261eb4f65980f830e77f37c4f8d11eac9321f302a089698f3c0079c41979d278e8432405fc14d80aad028f79b0c4c626e4d4ac4e643692a9adfdc9ba2685a6c47eef0af5c8f5d776083895e3e01f1f944cd7547542b7e64b870b1423857f6362533f7cd2a01d231ffed60fe26169c28b28ace1a307fdc8d4b29f0b44659402d3d455d719d896f83b7ee927f0652ca883e4cfa85a2f4f7bc60dda1b068092923076893db5bd477fa2d26173314d7512760521d6ec9f"
# p2h=RVRF.pedersen_proof_to_hash(bytes.fromhex(RingVRF_PROOF))
# # print("32 bytes:",bytes.fromhex(RingVRF_PROOF)[:32].hex())
# print("proof 2 hash is:", p2h.hex())


#5 RingVrf Proof Verify using (add, ring_root, ring_vrf_proof, message)
add=b"" #conetxt c
RING_ROOT="afd34e92148ec643fbb578f0e14a1ca9369d3e96b821fcc811c745c320fe2264172545ca9b6b1d8a196734bc864e171484f45ba5b95d9be39f03214b59520af3137ea80e302730a5df8e4155003414f6dcf0523d15c6ef5089806e1e8e5782be92e630ae2b14e758ab0960e372172203f4c9a41777dadd529971d7ab9d23ab29fe0e9c85ec450505dde7f5ac038274cf"
Ring_Proof="98bc465cdf55ee0799bc25a80724d02bb2471cd7d065d9bd53a3a7e3416051f6e3686f7c6464c364b9f2b0f15750426a9107bd20fe94a01157764aab5f300d7e2fcba2178cb80851890a656d89550d0bebf60cca8c23575011d2f37cdc06dcdd93818c0c1c3bff5a793d026c604294d0bbd940ec5f1c652bb37dc47564d71dd1aa05aba41d1f0cb7f4442a88d9b533ba8e4788f711abdf7275be66d45d222dde988dedd0cb5b0d36b21ee64e5ef94e26017b674e387baf0f2d8bd04ac6faab057510b4797248e0cb57e03db0199cd77373ee56adb7555928c391de794a07a613f7daac3fc77ff7e7574eaeb0e1a09743c4dae2b420ba59cf40eb0445e41ffb2449021976970c858153505b20ac237bfca469d8b998fc928e9db39a94e2df1740ae0bad6f5d8656806ba24a2f9b89f7a4a9caef4e3ff01fec5982af873143346362a0eb9bb2f6375496ff9388639c7ffeb0bcee33769616e4878fc2315a3ac3518a9da3c4f072e0a0b583436a58524f036c3a1eeca023598682f1132485d3a57088b63acd86c6c72288568db71ff15b7677bfe7218acdebb144a2bf261eb4f65980f830e77f37c4f8d11eac9321f302a089698f3c0079c41979d278e8432405fc14d80aad028f79b0c4c626e4d4ac4e643692a9adfdc9ba2685a6c47eef0af5c8f5d776083895e3e01f1f944cd7547542b7e64b870b1423857f6362533f7cd2a01d231ffed60fe26169c28b28ace1a307fdc8d4b29f0b44659402d3d455d719d896f83b7ee927f0652ca883e4cfa85a2f4f7bc60dda1b068092923076893db5bd477fa2d26173314d7512760521d6ec9f"
ALPHA=b"" #message m

#for sample pedersen proof
gamma="e7aa5154103450f0a0525a36a441f827296ee489ef30ed8787cff8df1bef223f"
proof_pk_com= "3b21abd58807bb6d93797001adaacd7113ec320dcf32d1226494e18a57931fc4"
proof_r= "8123054bfdb6918e0aa25c3337e6509eea262282fd26853bf7cd6db234583f5e"
proof_ok= "ac57ce6a53a887fc59b6aa73d8ff0e718b49bd9407a627ae0e9b9e7c5d0d175b"
proof_s= "0d379b65fb1e6b2adcbf80618c08e31fd526f06c2defa159158f5de146104c0f"
proof_sb= "e2ca83136143e0cac3f7ee863edd3879ed753b995b1ff8d58305d3b1f323630b"

# Pedersen_proof=bytes.fromhex(gamma)+bytes.fromhex(proof_pk_com)+bytes.fromhex(proof_r)+bytes.fromhex(proof_ok)+ bytes.fromhex(proof_s)+bytes.fromhex(proof_sb)
# signature=Pedersen_proof+bytes.fromhex(Ring_Proof)
# print("Is The Ring Proof_Valid:", RVRF.ring_vrf_proof_verify(add,bytes.fromhex(RING_ROOT), signature, ALPHA)) #c, r,sign,alpha
#


















# add=b""
# RING_ROOT="81ff2ae0324ba81dbc5f511fadd27d6fa23ff83d45a84ea96ed82f09ad73114a79349c978a86386c1a33c09f60c5362a99b73de3fe7f609d6f5f35736a6eb82c739943ad4a3d1fe3f1b589d5b173ad3351786b08e07a1369f82fee25b4a1600192e630ae2b14e758ab0960e372172203f4c9a41777dadd529971d7ab9d23ab29fe0e9c85ec450505dde7f5ac038274cf"
# Ring_Proof="a57818b60d8fc54695a66b49a627b158a2f4141c696f0ac41b16831021e0ce5604aaa76fab504c106e4a50621adcbeeb9107bd20fe94a01157764aab5f300d7e2fcba2178cb80851890a656d89550d0bebf60cca8c23575011d2f37cdc06dcdda5d0e0b9c8dfabd2a88713ea7448a6afed58c035994f52a06a37045b7fe9bc8800939475c3beae30ee28aabdb0932bacb7967c476a0b2aaa9bc536fd18b487a65135ae128d4c6fe14dc98160c841a9183ac4a31adf99ad98c4f18368eed0733b7b5126d767299e72a086d9cd9fda84ef8392425404173b80a430a9b320c6cf46f203e0b7214333ab49b43bd68bef7db51fd7d55f3332122aa7e65dd990eb5c36fdef18cfe2ef8624e1372d4ae51fb115572e4a67ada192739a8eddfee2f88c53e9072a320d73c78176f8572b8021f5aa2bfe82834b546cd93295bf05d7b6b81ac56d1a3c8cdcccb575ef8e6865d0b45a2e684e3d03cdfe941d823450076a7229fa17e1d1a92e8a4e12672837f603e0b782235fee0b4f3f2673972730c14e224f0b6cd6e8a2e24358539a2cc242cf792d9b85cd784a6496192404c6ecc68ee370b75f373ee9d9ba48a2de51d3b3f0a923a9385444eb6396f2ec220cefe3113bf208f2697fb1625da3c8d12e7ab8d405c8c05cc70074a7e2b76d73e9fc2e05e95b303920abf93139baaadba3911e3d2d63ae5335a8be8fb028df0052aded98f2d81234fe608836b4896b2e080b9b9fa306be342e1aeb95368beb3099a97f2dd0c1b10e54e38efb04c2b8977da7da8dfa801d6997de31337ea2c4ca2ddc77ad43566a614cc1742a24285ff9da590746aa6d"
# ALPHA=b"0a"
# gamma="60f32f5ad3e9694b82ccc0a735edb2f940f757ab333cc5f7b0a41158b80f574f"
# proof_pk_com= "c1322e7a65b83996c25e37a84e36598333b0d417619242c0cb3d9d972edde848"
# proof_r= "7a4363e0bf9cd18317287d681ab05704982b0088ce373f696dbdf3909a902b36"
# proof_ok= "fc8770c209212640742d53e2f40e5c30fffae574f90fdc670ff11a1127586c03"
# proof_s= "93f7c9d73eec05e500b758f645a2967e62b2206e57eff5f9b99bfc71812e620d"
# proof_sb= "c864de36e0b428f6fb4ef470f94ec9601716cb26ad96f3359e4a1ec110794a0b"